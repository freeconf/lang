syntax="proto3";

option go_package = "./pb";

package pb;

import "meta.proto";

message Void {}

////////////

message LoadModuleRequest {
      string dir = 1;
      string name = 2;
}

message LoadModuleResponse {
    Module module = 1;
    uint64 moduleHnd = 2;
}

service Parser {
      rpc LoadModule (LoadModuleRequest) returns (LoadModuleResponse) {}
}

////////////

message ReleaseRequest {
      uint64 gHnd = 1;
}

service Handles {
      rpc Release (ReleaseRequest) returns (Void) {}
}

////////////

message NewBrowserRequest {
      uint64 moduleHnd = 1;
      uint64 nodeHnd = 3;
}

message JSONRdrRequest {
      string fname = 1;
}

message NewBrowserResponse {
      uint64 browserHnd = 1;
}

message UpsertFromRequest {
      uint64 selHnd = 1;
      uint64 nodeHnd = 2;
}

message UpsertFromResponse {
}

message BrowserRootRequest {
      uint64 browserHnd = 1;
}

message BrowserRootResponse {
      uint64 selHnd = 1;
}

message NewNodeRequest {      
}

message NewNodeResponse {
      uint64 nodeHnd = 1;
}

message FindRequest {
      uint64 selHnd = 1;
      string path = 2;
}

message FindResponse {
      uint64 selHnd = 1;
}

message GetSelectionRequest {
      uint64 selHnd = 1;
}

message GetSelectionResponse {
      uint64 parentHnd = 1;
      uint64 browserHnd = 2;
      string metaIdent = 3;
      uint64 nodeHnd = 4;
}

message ActionRequest {
      uint64 selHnd = 1;
      uint64 inputNodeHnd = 2;      
}

message ActionResponse {
      uint64 outputSelHnd = 1;
}

message GetBrowserRequest {
      uint64 browserHnd = 1;
}

message GetBrowserResponse {
      uint64 moduleHnd = 1;
}

message GetModuleRequest {
      uint64 moduleHnd = 1;
}

message GetModuleResponse {
      Module module = 1;
}

service Node {
      rpc NewBrowser(NewBrowserRequest) returns (NewBrowserResponse) {}
      rpc BrowserRoot(BrowserRootRequest) returns (BrowserRootResponse) {}
      rpc UpsertFrom(UpsertFromRequest) returns (UpsertFromResponse) {}
      rpc Action(ActionRequest) returns (ActionResponse) {}
      rpc Find(FindRequest) returns (FindResponse) {}
      rpc NewNode(NewNodeRequest) returns (NewNodeResponse) {}
      rpc GetSelection(GetSelectionRequest) returns (GetSelectionResponse) {}
      rpc GetBrowser(GetBrowserRequest) returns (GetBrowserResponse) {}
      rpc GetModule(GetModuleRequest) returns (GetModuleResponse) {}
}

////////////

message JSONRdrResponse {
      uint64 nodeHnd = 1;
}

service NodeUtil {
      rpc JSONRdr(JSONRdrRequest) returns (JSONRdrResponse) {}
}
