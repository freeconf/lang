
meta Module {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    definitions DataDef, definitions DataDef[];
    namespace string, namespace string;
    prefix string, prefix string;
    contact string, contact string;
    organization string, organization string;
    reference string, reference string;
    version string, version string;
    actions Rpc, actions Rpc[];
    notifications Notification, notifications Notification[];
}

meta RpcInput {
    reference string, reference string;
    extensions Extension, extensions Extension[];
    definitions DataDef, definitions DataDef[];
}

meta RpcOutput {
    reference string, reference string;
    extensions Extension, extensions Extension[];
    definitions DataDef, definitions DataDef[];
}

meta Rpc {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    reference string, reference string;
    input RpcInput, input RpcInput;
    output RpcOutput, output RpcOutput;
}

meta Notification {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    reference string, reference string;
    definitions DataDef, definitions DataDef[];
}

meta ExtensionDefArg {
    ident string, ident string;
    description string, description string;
    reference string, reference string;
    yinElement bool, yin_element bool;
}

meta ExtensionDef {
    ident string, ident string;
    description string, description string;
    reference string, reference string;
    status Status, status Status;
    arguments ExtensionDefArg, arguments ExtensionDefArg[];
}

meta Extension {
    ident string, ident string;
    prefix string, prefix string;
    keyword string, keyword string;
    def string, ext_def string;
    arguments string, arguments string[];
}

meta Container {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    definitions DataDef, definitions DataDef[];
    config OptionalBool, config OptionalBool;
    mandatory OptionalBool, mandatory OptionalBool;
    actions Rpc, actions Rpc[];
    notifications Notification, notifications Notification[];
}

meta Type {
    ident string, ident string;
    description string, description string;
    reference string, reference string;
    format Format, format Format;
}

meta Leaf {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    type Type, type Type;
    config OptionalBool, config OptionalBool;
    mandatory OptionalBool, mandatory OptionalBool;
}

meta List {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    definitions DataDef, definitions DataDef[];
    config OptionalBool, config OptionalBool;
    mandatory OptionalBool, mandatory OptionalBool;
    actions Rpc, actions Rpc[];
    notifications Notification, notifications Notification[];
    key string, key string[];
}

meta LeafList {
    ident string, ident string;
    description string, description string;
    extensions Extension, extensions Extension[];
    config OptionalBool, config OptionalBool;
    mandatory OptionalBool, mandatory OptionalBool;
}

meta DataDef {
}

meta EnumVal {
    id int32, id int32;
    label string, label string;
}

meta IdentRef {
    base string, base string;
    label string, label string;
}

meta ValUnion {
}

meta Val {
    format Format, format Format;
    value ValUnion, value ValUnion;
    list_value ValUnion, list_value ValUnion[];
}


val { 
 BINARY, Binary

 BITS, Bits

 BOOL, Bool

 DECIMAL64, Decimal64

 EMPTY, Empty

 ENUM, Enum

 IDENTITY_REF, IdentRef

 INT8, Int8

 INT16, Int16

 INT32, Int32

 INT64, Int64

 STRING, String

 UINT8, Uint8

 UINT16, Uint16

 UINT32, Uint32

 UINT64, Uint64

 BINARY_LIST, Binary

 BITS_LIST, Bits

 BOOL_LIST, Bool

 DECIMAL64_LIST, Decimal64

 EMPTY_LIST, Empty

 ENUM_LIST, Enum

 IDENTITY_REF_LIST, IdentRef

 INT8_LIST, Int8

 INT16_LIST, Int16

 INT32_LIST, Int32

 INT64_LIST, Int64

 STRING_LIST, String

 UINT8_LIST, Uint8

 UINT16_LIST, Uint16

 UINT32_LIST, Uint32

 UINT64_LIST, Uint64

}